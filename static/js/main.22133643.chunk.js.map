{"version":3,"sources":["components/ResultsBox.js","components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["ResultsBox","props","state","matches","this","searchString","checkString","trim","charString","epString","tags","match","tag","startsWith","replace","searchRegex","RegExp","matchArray","prop","episodeDatabase","transcript","forEach","lines","test","line","character","title","push","speaker","episode","eNumber","number_overall","setState","prevProps","searchDb","className","length","map","index","Component","SearchBar","preSearchString","setPreSearchString","bind","setSearchString","inString","e","preventDefault","onSubmit","type","placeholder","value","onInput","target","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PA0GeA,E,kDApGd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZC,QAAS,IAHQ,E,4CAOnB,WACC,GAAKC,KAAKH,MAAMI,aAAhB,CAGA,IAAIC,EAAcF,KAAKH,MAAMI,aAAaE,OACtCC,EAAa,KACbC,EAAW,KAEXC,EAAOJ,EAAYK,MAAO,WAC9B,IAAK,IAAMC,KAAOF,EACbA,EAAKE,GAAKC,WAAW,gBACxBP,EAAcA,EAAYQ,QAAQJ,EAAKE,GAAM,IAC7CJ,EAAaE,EAAKE,GAAKE,QAAQ,cAAe,IAAIA,QAAQ,IAAK,IAAIP,QACzDG,EAAKE,GAAKC,WAAW,eAC/BP,EAAcA,EAAYQ,QAAQJ,EAAKE,GAAM,IAC7CH,EAAWC,EAAKE,GAAKE,QAAQ,YAAa,IAAIA,QAAQ,IAAK,IAAIP,QAKjED,EAAcA,EAAYC,OAE1B,IAAIQ,EAAc,IAAIC,OAAOV,EAAa,KACtCW,EAAa,GAvBP,WAyBCC,GACVC,EAAgBD,GAAME,WAAWC,SAAQ,SAAAC,GACxC,GAAIP,EAAYQ,KAAKD,EAAME,MAAO,CACjC,GAAIhB,EAEH,IADgB,IAAIQ,OAAOR,EAAY,KACxBe,KAAKD,EAAMG,WACzB,OAGF,GAAIhB,EAEH,IADc,IAAIO,OAAOP,EAAU,KACtBc,KAAKJ,EAAgBD,GAAMQ,OACvC,OAGFT,EAAWU,KAAK,CACfH,KAAMF,EAAME,KACZI,QAASN,EAAMG,UACfI,QAASV,EAAgBD,GAAMQ,MAC/BI,QAASX,EAAgBD,GAAMa,sBAnBnC,IAAK,IAAMb,KAAQC,EAAkB,EAA1BD,GAyBXd,KAAK4B,SAAL,2BACI5B,KAAKF,OADT,IAECC,QAASc,Q,gCAIX,SAAmBgB,GACZ7B,KAAKH,MAAMI,eAAiB4B,EAAU5B,cACxCD,KAAK8B,a,oBAIV,WACC,OACC,sBAAMC,UAAU,cAAhB,UACC,gDAAmB/B,KAAKH,MAAMI,gBAE9B,uBAEA,4BAAG,kCAEAD,KAAKF,MAAMC,QAAQiC,SAAWhC,KAAKH,MAAMI,aAAgBD,KAAKF,MAAMC,QAAQiC,OAAS,IAFrF,mBAMH,8BAEEhC,KAAKF,MAAMC,QAAQkC,KAAI,SAACb,EAAMc,GAAP,OACtB,sBAAiBH,UAAU,WAA3B,UACC,4BAAIX,EAAKI,UADV,KACyBJ,EAAKA,KAC7B,qCACG,kCAAQA,EAAKK,QAAb,UAA6BL,EAAKM,WADrC,UAFSQ,e,GAtFQC,aC+CVC,E,kDA/Cd,WAAYvC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZuC,gBAAiB,GACjBpC,aAAc,IAEf,EAAKqC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBAPL,E,sDAUnB,SAAmBE,GAClBzC,KAAK4B,SAAL,2BACI5B,KAAKF,OADT,IAECuC,gBAAiBI,O,6BAInB,SAAgBC,GACfA,EAAEC,iBACF3C,KAAK4B,SAAL,2BACI5B,KAAKF,OADT,IAECG,aAAcD,KAAKF,MAAMuC,qB,oBAI3B,WAAU,IAAD,OACR,OACC,sBAAMN,UAAU,aAAhB,UACC,uBAAMa,SAAU5C,KAAKwC,gBAArB,UACC,uBACCK,KAAK,SACLC,YAAY,qBACZC,MAAO/C,KAAKF,MAAMuC,gBAClBW,QAAS,SAAAN,GAAC,OAAI,EAAKJ,mBAAmBI,EAAEO,OAAOF,UAEhD,wBAAQF,KAAK,SAAb,gBACA,mBAAGK,KAAK,6EAAR,qBAGD,cAAC,EAAD,CACCjD,aAAgBD,KAAKF,MAAMG,sB,GAzCRkC,a,MCkBTgB,MAhBf,WACE,OACE,sBAAKpB,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,sEAEF,cAAC,EAAD,IACA,mCACE,uBACA,oFACA,kDAAoB,mBAAGmB,KAAK,iEAAR,8BCJbE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.22133643.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport episodeDatabase from \"../assets/episodes.json\"\r\n\r\n\r\nclass ResultsBox extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmatches: []\r\n\t\t}\r\n\t}\r\n\r\n\tsearchDb() {\r\n\t\tif (!this.props.searchString) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet checkString = this.props.searchString.trim();\r\n\t\tlet charString = null;\r\n\t\tlet epString = null;\r\n\r\n\t\tlet tags = checkString.match( /{.*?}/gi);\r\n\t\tfor (const tag in tags) {\r\n\t\t\tif (tags[tag].startsWith(\"{character:\")) {\r\n\t\t\t\tcheckString = checkString.replace(tags[tag], \"\")\r\n\t\t\t\tcharString = tags[tag].replace(\"{character:\", \"\").replace(\"}\", \"\").trim()\r\n\t\t\t} else if (tags[tag].startsWith(\"{episode:\")) {\r\n\t\t\t\tcheckString = checkString.replace(tags[tag], \"\")\r\n\t\t\t\tepString = tags[tag].replace(\"{episode:\", \"\").replace(\"}\", \"\").trim()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tcheckString = checkString.trim();\r\n\r\n\t\tlet searchRegex = new RegExp(checkString, \"i\");\r\n\t\tlet matchArray = []\r\n\r\n\t\tfor (const prop in episodeDatabase) {\r\n\t\t\tepisodeDatabase[prop].transcript.forEach(lines => {\r\n\t\t\t\tif (searchRegex.test(lines.line)) {\r\n\t\t\t\t\tif (charString) {\r\n\t\t\t\t\t\tlet charRegex = new RegExp(charString, \"i\");\r\n\t\t\t\t\t\tif (!charRegex.test(lines.character)) {\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (epString) {\r\n\t\t\t\t\t\tlet epRegex = new RegExp(epString, \"i\");\r\n\t\t\t\t\t\tif (!epRegex.test(episodeDatabase[prop].title)) {\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmatchArray.push({\r\n\t\t\t\t\t\tline: lines.line,\r\n\t\t\t\t\t\tspeaker: lines.character,\r\n\t\t\t\t\t\tepisode: episodeDatabase[prop].title,\r\n\t\t\t\t\t\teNumber: episodeDatabase[prop].number_overall\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tmatches: matchArray\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n  \t\tif (this.props.searchString !== prevProps.searchString) {\r\n    \t\tthis.searchDb();\r\n  \t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div  className=\"results-box\">\r\n\t\t\t\t<p>Searching for: {this.props.searchString}</p>\r\n\r\n\t\t\t\t<hr/>\r\n\r\n\t\t\t\t<p><small>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(this.state.matches.length || !this.props.searchString) ? this.state.matches.length : \"0\"\r\n\t\t\t\t\t} Result(s):\r\n\t\t\t\t</small></p>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.matches.map((line, index) => (\r\n\t\t\t\t\t\t\t<div key={index} className=\"line-box\">\r\n\t\t\t\t\t\t\t\t<b>{line.speaker}</b>: {line.line} \r\n\t\t\t\t\t\t\t\t<div >\r\n\t\t\t\t\t\t\t\t\t- <small>{line.episode} | ep. {line.eNumber}</small> -\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ResultsBox;","import React, { Component } from 'react';\r\n\r\nimport ResultsBox from \"./ResultsBox\"\r\n\r\nclass SearchBar extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tpreSearchString: \"\",\r\n\t\t\tsearchString: \"\",\r\n\t\t}\r\n\t\tthis.setPreSearchString = this.setPreSearchString.bind(this);\r\n\t\tthis.setSearchString = this.setSearchString.bind(this);\r\n\t}\r\n\r\n\tsetPreSearchString(inString) {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tpreSearchString: inString,\r\n\t\t});\r\n\t}\r\n\r\n\tsetSearchString(e) {\r\n\t\te.preventDefault();\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tsearchString: this.state.preSearchString,\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div  className=\"search-bar\">\r\n\t\t\t\t<form onSubmit={this.setSearchString}>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"search\" \r\n\t\t\t\t\t\tplaceholder=\"Search Transcripts\" \r\n\t\t\t\t\t\tvalue={this.state.preSearchString}\r\n\t\t\t\t\t\tonInput={e => this.setPreSearchString(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type=\"submit\">Go</button>\r\n\t\t\t\t\t<a href=\"https://github.com/ReluctusB/MLP-Fim-Episode-Transcript-Search#search-help\">Help</a>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t<ResultsBox\r\n\t\t\t\t\tsearchString = {this.state.searchString}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\nimport SearchBar from \"./components/SearchBar\";\nimport './scss/index.scss';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>MLP: FiM Episode Transcript Search</h1>\n      </header>\n      <SearchBar/>\n      <footer>\n        <hr/>\n        <p>MLP: Friendship is Magic® - © Hasbro Inc.®</p>\n        <p>Created by RB_ | <a href=\"https://github.com/ReluctusB/MLP-Fim-Episode-Transcript-Search\">Github</a></p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}