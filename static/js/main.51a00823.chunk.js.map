{"version":3,"sources":["components/ResultsBox.js","components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["ResultsBox","props","state","matches","this","searchString","searchRegex","RegExp","matchArray","prop","episodeDatabase","transcript","forEach","lines","test","line","push","speaker","character","episode","title","eNumber","number_overall","setState","prevProps","searchDb","className","map","index","length","Component","SearchBar","preSearchString","setPreSearchString","bind","setSearchString","inString","e","preventDefault","onSubmit","type","placeholder","value","onInput","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAuEeA,E,kDAjEd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZC,QAAS,IAHQ,E,4CAOnB,WACC,GAAKC,KAAKH,MAAMI,aAAhB,CAIA,IAAIC,EAAc,IAAIC,OAAOH,KAAKH,MAAMI,aAAc,KAClDG,EAAa,GANP,WAQCC,GACVC,EAAgBD,GAAME,WAAWC,SAAQ,SAAAC,GACpCP,EAAYQ,KAAKD,EAAME,OAC1BP,EAAWQ,KAAK,CACfD,KAAMF,EAAME,KACZE,QAASJ,EAAMK,UACfC,QAAST,EAAgBD,GAAMW,MAC/BC,QAASX,EAAgBD,GAAMa,qBAPnC,IAAK,IAAMb,KAAQC,EAAkB,EAA1BD,GAaXL,KAAKmB,SAAL,2BACInB,KAAKF,OADT,IAECC,QAASK,Q,gCAIX,SAAmBgB,GACZpB,KAAKH,MAAMI,eAAiBmB,EAAUnB,cACxCD,KAAKqB,a,oBAIV,WACC,OACC,sBAAMC,UAAU,cAAhB,UACC,gDAAmBtB,KAAKH,MAAMI,gBAE9B,uBAEA,gCAEED,KAAKF,MAAMC,QAAQwB,KAAI,SAACZ,EAAMa,GAAP,OACtB,8BAAgBb,EAAKE,QAArB,KAAgCF,EAAKA,KAArC,MAA6C,kCAAQA,EAAKI,QAAb,UAA6BJ,EAAKM,aAAvEO,MAGV,4BAEExB,KAAKF,MAAMC,QAAQ0B,SAAWzB,KAAKH,MAAMI,aAAgB,GAAK,gC,GAxD5CyB,aC+CVC,E,kDA/Cd,WAAY9B,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZ8B,gBAAiB,GACjB3B,aAAc,IAEf,EAAK4B,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBAPL,E,sDAUnB,SAAmBE,GAClBhC,KAAKmB,SAAL,2BACInB,KAAKF,OADT,IAEC8B,gBAAiBI,O,6BAInB,SAAgBC,GACfA,EAAEC,iBACFlC,KAAKmB,SAAL,2BACInB,KAAKF,OADT,IAECG,aAAcD,KAAKF,MAAM8B,qB,oBAI3B,WAAU,IAAD,OACR,OACC,sBAAMN,UAAU,aAAhB,UACC,uBAAMa,SAAUnC,KAAK+B,gBAArB,UACA,uBACCK,KAAK,SACLC,YAAY,qBACZC,MAAOtC,KAAKF,MAAM8B,gBAClBW,QAAS,SAAAN,GAAC,OAAI,EAAKJ,mBAAmBI,EAAEO,OAAOF,UAGhD,wBAAQF,KAAK,SAAb,mBAGA,cAAC,EAAD,CACCnC,aAAgBD,KAAKF,MAAMG,sB,GAzCRyB,a,MCaTe,MAXf,WACE,OACE,sBAAKnB,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,sEAEF,cAAC,EAAD,QCASoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.51a00823.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport episodeDatabase from \"../assets/episodes.json\"\r\n\r\n\r\nclass ResultsBox extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmatches: []\r\n\t\t}\r\n\t}\r\n\r\n\tsearchDb() {\r\n\t\tif (!this.props.searchString) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet searchRegex = new RegExp(this.props.searchString, \"i\");\r\n\t\tlet matchArray = []\r\n\r\n\t\tfor (const prop in episodeDatabase) {\r\n\t\t\tepisodeDatabase[prop].transcript.forEach(lines => {\r\n\t\t\t\tif (searchRegex.test(lines.line)) {\r\n\t\t\t\t\tmatchArray.push({\r\n\t\t\t\t\t\tline: lines.line,\r\n\t\t\t\t\t\tspeaker: lines.character,\r\n\t\t\t\t\t\tepisode: episodeDatabase[prop].title,\r\n\t\t\t\t\t\teNumber: episodeDatabase[prop].number_overall\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tmatches: matchArray\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n  \t\tif (this.props.searchString !== prevProps.searchString) {\r\n    \t\tthis.searchDb();\r\n  \t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div  className=\"results-box\">\r\n\t\t\t\t<p>Searching for: {this.props.searchString}</p>\r\n\r\n\t\t\t\t<hr/>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.matches.map((line, index) => (\r\n\t\t\t\t\t\t\t<p key={index}>{line.speaker}: {line.line} - <small>{line.episode} | ep. {line.eNumber}</small></p>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(this.state.matches.length || !this.props.searchString) ? \"\" : \"No results found.\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ResultsBox;","import React, { Component } from 'react';\r\n\r\nimport ResultsBox from \"./ResultsBox\"\r\n\r\nclass SearchBar extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tpreSearchString: \"\",\r\n\t\t\tsearchString: \"\",\r\n\t\t}\r\n\t\tthis.setPreSearchString = this.setPreSearchString.bind(this);\r\n\t\tthis.setSearchString = this.setSearchString.bind(this);\r\n\t}\r\n\r\n\tsetPreSearchString(inString) {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tpreSearchString: inString,\r\n\t\t});\r\n\t}\r\n\r\n\tsetSearchString(e) {\r\n\t\te.preventDefault();\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tsearchString: this.state.preSearchString,\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div  className=\"search-bar\">\r\n\t\t\t\t<form onSubmit={this.setSearchString}>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"search\" \r\n\t\t\t\t\tplaceholder=\"Search Transcripts\" \r\n\t\t\t\t\tvalue={this.state.preSearchString}\r\n\t\t\t\t\tonInput={e => this.setPreSearchString(e.target.value)}\r\n\r\n\t\t\t\t/>\r\n\t\t\t\t<button type=\"submit\">Go</button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t<ResultsBox\r\n\t\t\t\t\tsearchString = {this.state.searchString}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\nimport SearchBar from \"./components/SearchBar\";\nimport './scss/index.scss';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>MLP: FiM Episode Transcript Search</h1>\n      </header>\n      <SearchBar/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}